% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/session.R
\docType{methods}
\name{session}
\alias{session}
\alias{session,SsimLibrary-method}
\alias{session,missingOrNULLOrChar-method}
\title{Start or get a SyncroSim session.}
\usage{
session(x = NULL, silent = F, printCmd = F, defaultModel = "stsim")

\S4method{session}{missingOrNULLOrChar}(x = NULL, silent = F,
  printCmd = F, defaultModel = "stsim")

\S4method{session}{SsimLibrary}(x = NULL, silent = F, printCmd = F,
  defaultModel = "stsim")
}
\arguments{
\item{x}{Character or SsimObject. A path to SyncroSim.Console.exe or an object containing a Session. If NULL the installed version of syncrosim in the registry is used.}

\item{silent}{Logical. Applies only if x is a path or NULL. If TRUE, warnings from the console are ignored. Otherwise they are printed.}

\item{printCmd}{Logical. Applies only if x is a path or NULL. If TRUE, arguments passed to the SyncroSim console are also printed. Helpful for debugging. FALSE by default.}

\item{defaultModel}{Character. Applies only if x is a path or NULL. The name of a SyncroSim model type. "stsim" by default.}
}
\value{
An SyncroSim Session object containing a valid console path.
}
\description{
Methods to create a Syncrosim session or fetch one from a SsimLibrary, Project or Scenario object.
}
\section{Methods (by class)}{
\itemize{
\item \code{missingOrNULLOrChar}: Create a SyncroSim Session from a filepath or get default Session.

\item \code{SsimLibrary}: Get the Session associated with an SsimObject.
}}
\examples{
# Look for SyncroSim in the usual places
mySession = session()
path(mySession)

# Specify a SyncroSim version
mySession = session("C:/Program Files/SyncroSim/1/SyncroSim.Console.exe")

# Get the session from an SsimLibrary
myLib = ssimLibrary(name="stsim")
session(myLib)

# Assign a session to a SyncroSim library
session(myLib)=session()
}

