% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/project.R
\name{project}
\alias{project}
\title{Create or open a project.}
\usage{
project(ssimLibrary, name = NULL, id = NULL, create = T,
  projects = NULL)
}
\arguments{
\item{ssimLibrary}{An SsimLibrary object, representing the library that contains the project.}

\item{name}{The project name.}

\item{id}{The project id.}

\item{create}{If TRUE, create project if one does not exist. If FALSE, only return an existing project}

\item{projects}{A dataframe of existing projects produced by projects(). Use to speed processing.}
}
\value{
A \code{Project} object representing a SyncroSim project.
}
\description{
Creates or opens an \code{\link{Project}} object representing a SyncroSim project.
}
\details{
\itemize{
  \item {If name/id uniquely identify an existing project: }{Returns the existing Project}
  \item {If name/id identify more than one project: }{Error}
  \item {If name/id don't identify an existing project, and name is not specified: }{Creates a new Project called "Project". The id argument is ignored, as SyncroSim automatically assigns an id.}
  \item {If name/id don't identify an existing project, and name is specified: }{Creates a new Project called <name>. The id argument is ignored, as SyncroSim automatically assigns an id.}
}
}
\examples{
# Create a new project
myLibrary = ssimLibrary(name="stsim")
myProject = project(myLibrary) #If no name is given, creates a project named "Project<ID>".
myProject = project(ssimLibrary=mySsimLibrary, name="My new project name")

# Get a named list of existing projects
myProjects = projects(myLibrary) # Each element in the list is named by a character version of the project ID
names(myProjects)   # vector of the project names (using base R names function)
#TO DO: base R function names returns project id's, not names. Do we want to overwrite the base function?

# Get an existing project. Assume that name uniquely identifies a single project - give error if not
myProject = myProjects[[1]]
myProject = project(myLibrary, name="My new project name")

# Get/set the project properties - for now we can only set the name
name(myProject)
name(myProject) = "New project name" #  - committed to db immediately
ssimLibrary(myProject) # Returns a SyncroSimLibrary object for the project
}

