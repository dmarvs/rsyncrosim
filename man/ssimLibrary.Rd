% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ssimLibrary.R
\docType{methods}
\name{ssimLibrary}
\alias{ssimLibrary}
\alias{ssimLibrary,SsimObject-method}
\title{Create or open a library.}
\usage{
ssimLibrary(name = NULL, summary = NULL, ...)

\S4method{ssimLibrary}{SsimObject}(name, summary)

\S4method{ssimLibrary}{missingOrNULLOrChar}(name = NULL, summary = NULL,
  model = NULL, session = NULL, addon = NULL, forceUpdate = F)
}
\arguments{
\item{name}{Character string, Project/Scenario/SsimLibrary. The path to a library or SsimObject. Optional.}

\item{summary}{logical. Default T}

\item{model}{Character. The model type. If NULL, defaultModel(session()) will be used.}

\item{session}{Session. If NULL, session() will be used.}

\item{addon}{Character or character vector. One or more addons. See addons() for options.}

\item{forceUpdate}{Logical. If FALSE (default) user will be prompted to approve any required updates. If TRUE, required updates will be applied silently.}
}
\value{
An \code{SsimLibrary} object representing a SyncroSim library.
}
\description{
Creates or opens an \code{\link{SsimLibrary}} object representing a SyncroSim library.
If summary = T, returns library summary info. 
If summary = NULL, returns library summary info if ssimObject is an SsimLibrary, SsimLibrary object otherwise.
}
\details{
\itemize{
  \item {If name is SyncroSim Project or Scenario: }{Returns the \code{\link{SsimLibrary}} associated with the Project or Scenario.}
  \item {If name is NULL: }{Create/open a SsimLibrary in the current working directory with the filename SsimLibrary.ssim.}
  \item {If name is a string: }{If string is not a valid path treat as filename in working directory. If no file suffix provided in string then add .ssim. Attempts to open a library of that name. If library does not exist creates a library of type model in the current working directory.}
  \item {If given a name and a model: }{Create/open a library called <name>.ssim. Returns an error if the library already exists but is a different type of model.}
}
}
\section{Methods (by class)}{
\itemize{
\item \code{SsimObject}: Get the SsimLibrary associated with a SyncroSim Object.
}}
\examples{
#TODO â€“ update examples
# See the installed models
model(session())

# Create a library called <model>.ssim in the current working directory.
myLibrary = ssimLibrary()
session(myLibrary) #The SycroSim session
filepath(myLibrary) #Path to the file on disk.
info(myLibrary) #Model type and other library information.

# Open an existing SyncroSim library in the current working directory - don't make a backup copy.
myLibrary = ssimLibrary()

# Create a library with a name in the current working directory
mySecondLibrary = ssimLibrary(name="Lib2")

# Create a library with a name in another directory
myThirdLibrary = ssimLibrary(name=paste0(getwd(),"/Temp/Lib3"))

# Create or load a library using a specific session
mySession = session("C:/Program Files/SyncroSim/1/SyncroSim.Console.exe")
myLibrary = ssimLibrary(name="Lib2",session=mySession)

# Add a project and get the library associated with that project
myProject = project(myLibrary,project="a project")
myLibrary = ssimLibrary(myProject)
}

