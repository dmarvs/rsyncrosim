% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generics.R
\name{saveDatasheet}
\alias{saveDatasheet}
\title{Save datasheet(s)}
\usage{
saveDatasheet(ssimObject, data, name = NULL, project = NULL,
  scenario = NULL, append = NULL, fileData = NULL, forceElements = F)
}
\arguments{
\item{ssimObject}{SsimLibrary/Project/Scenario. Or the path to a library.}

\item{data}{A dataframe, vector, or list of these. One or more datasheets to load.}

\item{name}{character or vector of these. The name(s) of the datasheet(s) to be saved. If a vector of names is provided, then a list must be provided for the data argument. Names provided here will override those provided with data argument's list.}

\item{project}{character or integer. Project name or id.}

\item{scenario}{character or integer. Project name or id.}

\item{append}{logical. If TRUE, data will be appended to the datasheet, otherwise current values will be overwritten by data. Default TRUE for project/library-scope datasheets, and FALSE for scenario-scope datasheets.}

\item{fileData}{Named list or raster stack. Names are file names, corresponding to entries in data. The elements are objects containing the data associated with each name. Currently only supports Raster objects as elements.}

\item{forceElements}{logical. If FALSE (default) a single return message will be returns as a character string. Otherwise it will be returned in a list.}
}
\value{
A success or failure message, or a list of these.
}
\description{
Saves datasheets to a SyncroSim library.
}
\details{
ssimObject/project/scenario should identify a single ssimObject.

If fileData !=NULL, each element of names(fileData) should correspond uniquely to at most one entry in data. If a name is not found in data the element will be ignored with a warning.  
If names(fileData) are full filepaths, rsyncrosim will write each object to the corresponding path for subsequent loading by SyncroSim. Note this is generally more time-consuming because the files must be written twice.
If names(fileData) are not filepaths (faster, recommended), rsyncrosim will write each element directly to the appropriate SyncroSim input/output folders.
If fileData != NULL, data should be a dataframe, vector, or list of length 1, not a list of length >1.
}
\examples{

}

